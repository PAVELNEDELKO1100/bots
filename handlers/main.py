from aiogram import types
from dispatcher import dp, bot
import sqlite3
from .db_check import CheckDB
from aiogram.types import InputFile, ContentType, Message, ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

check = CheckDB()

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    try:
        ub = False
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        c.execute(f"SELECT user_id FROM black_list WHERE user_id = {message.from_user.id}")
        items = c.fetchall()
        for el in items:
            ub = True
            await message.answer("–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã!")
            db.commit()
            db.close()
            print(forerrorprint)
        check.add_user(message)
    except:
        try:
            check.update(message)
        except:
            pass
    if ub:
        pass
    else:
        await message.answer(f"""üëã –ü—Ä–∏–≤–µ—Ç, <a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a>!

ü§ñ –Ø <b>–ß–∞–ø—á–∞ | –ß–∞—Ç-–ë–æ—Ç</b>!
üòú –Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å —Ç–µ–±—è –∏ —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π!

‚ÑπÔ∏è /help - –ø–æ–º–æ—â—å""", parse_mode="HTML")

@dp.message_handler(commands=['help', 'info'])
async def helpp(message: types.Message):
    await message.answer("""<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ß–∞–ø—á–µ | –ß–∞—Ç-–ë–æ—Ç–µ:</b>

Username: @chapcabots_bot
–°–æ–∑–¥–∞—Ç–µ–ª–∏: @thedarkevil22

<b>–ß—Ç–æ —É–º–µ–µ—Ç –ß–∞–ø—á–∞ | –ß–∞—Ç-–ë–æ—Ç:</b>

-–ò–º–µ–µ—Ç 5 –≤–∞–ª—é—Ç: <b>–û—á–∫–∏</b>, <b>–≠–∫–ª–µ—Ä—ã</b>, <b>–ú–æ–Ω–µ—Ç—ã</b>, <b>–ß–∞–ø—á–∏</b>, <b>–§—Ä–∏–±–∞—Å—ã</b>
-–ò–º–µ–µ—Ç –∏–≥—Ä—ã: <b>–ö–ª–∏–∫–µ—Ä</b>, <b>–§–∞—Ä–º</b>, <b>–ö—É–±–∏–∫</b>, <b>–î–∞—Ä—Ç—Å</b>, <b>–ö—Ä–∞–∂–∞</b>, <b>–ö–µ–π—Å—ã</b>
-–í—ã–≤–µ—Å—Ç–∏ <b>–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>
-–ò–º–µ–µ—Ç <b>—Ä–µ–π—Ç–∏–Ω–≥–∏</b>
-–ò–º–µ–µ—Ç <b>–∫–Ω–∏–≥—É —Ä–µ—Ü–µ–ø—Ç–æ–≤</b>
-–ò–º–µ–µ—Ç <b>–ø–∞—Å—Ö–∞–ª–∫–∏</b>
-–ò–º–µ–µ—Ç <b>–∞—É–∫—Ü–∏–æ–Ω –Ω–∏–∫–æ–≤</b>
-–ò–º–µ–µ—Ç <b>–ø—Ä–µ—Ñ–∏–∫—Å—ã</b>
-–ò–º–µ–µ—Ç <b>–∫–ª–∞–Ω—ã</b>
-–ò–º–µ–µ—Ç <b>—Ä–∞–±–æ—Ç—ã</b>
-–ò–º–µ–µ—Ç <b>–±–∏—Ä–∂—É</b>
-–ò–º–µ–µ—Ç <b>–±—Ä–∞–∫–∏</b>
-–†–∞—Å—Å–∫–∞–∑–∞—Ç—å <b>–∞–Ω–µ–∫–¥–æ—Ç</b>

<b>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:</b>
-–ù–µ —Å–ø–∞–º–∏—Ç—å –∫–æ–º–º–∞–Ω–¥–∞–º–∏, –Ω–µ –∫–ª–∏–∫–∞—Ç—å –±—ã—Å—Ç—Ä–æ –≤ –∏–≥—Ä–µ <b>–ö–õ–ò–ö–ï–†</b>, –±–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–∏–ª—å–Ω–æ –ª–∞–≥–∞—Ç—å!
-–í —á–∞—Ç–∞—Ö –±–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ, –µ—Å–ª–∏ –Ω–µ –≤—ã–¥–∞—Ç—å –µ–º—É <b>–ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>
-–ë–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ, –µ—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º!
(–í–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è)

/commands - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥""", parse_mode="HTML")




@dp.message_handler(text=['–°–µ–º—å—è –ß–∞–ø—á–∏', '–°–µ–º–µ–π—Å—Ç–≤–æ –ß–∞–ø—á–∏', '–°–µ–º—å—è —á–∞–ø—á–∏', '–°–µ–º–µ–π—Å—Ç–≤–æ —á–∞–ø—á–∏', '—Å–µ–º—å—è –ß–∞–ø—á–∏', '—Å–µ–º–µ–π—Å—Ç–≤–æ –ß–∞–ø—á–∏', '—Å–µ–º—å—è —á–∞–ø—á–∏', '—Å–µ–º–µ–π—Å—Ç–≤–æ —á–∞–ø—á–∏'])
async def family(message: types.Message):
    await message.answer("""<b>–°–µ–º—å—è –ß–∞–ø—á–∏:</b>

Username: @end_soft
–ó–∞–¥—É–º–∫–∞: @end_soft
–ò–¥–µ–∏: @end_soft, @end_soft, @end_soft, @end_soft, @maend_softsachist
–ê–≤–∞—Ç–∞—Ä–∫–∏: @end_soft, @end_soft
–°–æ–∑–¥–∞—Ç–µ–ª–∏: @end_soft, @end_soft
–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª: @end_soft
–ò–≥—Ä–æ–≤–æ–π —á–∞—Ç: @end_soft


–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞    |   –ù–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞      |    Username –±–æ—Ç–∞

–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ | –ß–∞–ø—á–∞ | –ß–∞—Ç-–ë–æ—Ç      | @end_soft
21.04.2023        | –ß–∞–ø—á–∞ | ChatGPT     | @end_soft
23.04.2023        | –ß–∞–ø—á–∞ | –ß–∞—Ç-–ö–ª–æ—É–Ω | @end_soft""", parse_mode="HTML")


@dp.message_handler(commands=['ckb'])
async def process_ckb_command(message: types.Message):
    await message.answer("""–§–∏–∫—Å–∏–∫–∏ –æ—á–∏—Å—Ç–∏–ª–∏ —Ç–≤–æ—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫!
–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —á–∏—Å—Ç–∞!""", reply_markup=ReplyKeyboardRemove())

@dp.message_handler(commands=['ban'])
async def process_ckb_command(message: types.Message):
    if message.from_user.id == 1326911178:
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        try:
            buid = int(message.text.split(' ')[1])
            prich = message.text[len(str(buid))+6:]
            ubed = False
            if prich == '':
                prich = '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
            c.execute(f"SELECT * FROM black_list WHERE user_id = {buid}")
            items = c.fetchall()
            for el in items:
                ubed = True
            if ubed:
                await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω")
            else:
                c.execute(f"SELECT user_id, user_nick FROM user_data WHERE user_id = {buid}")
                items = c.fetchall()
                for el in items:
                    ui = el[0]
                    un = el[1]
                    cb = True
                try:
                    if cb:
                        c.execute(f"DELETE FROM user_data WHERE user_id = {buid}")
                        try:
                            c.execute(f"DELETE FROM stock_market WHERE user_id = {buid}")
                            c.execute(f"DELETE FROM stock_market_zakaz WHERE user_id = {buid}")
                        except:
                            pass
                        c.execute(f"DELETE FROM purchases WHERE user_id = {buid}")
                        c.execute(f"DELETE FROM nicks_auction WHERE user_id = {buid}")
                        jobs = ['teacher','programmer','killer','farmer','esportsman','developer','caver','builder','bloger','architector']
                        for job in jobs:
                            try:
                                c.execute(f"DELETE FROM job_{job} WHERE worker_id = {buid}")
                            except:
                                pass
                        games = ['stealing','slot_machine','farm','darts','cube','clicker']
                        for game in games:
                            c.execute(f"DELETE FROM game_{game} WHERE user_id = {buid}")
                        try:
                            for i in range(1,501):
                                c.execute(f"UPDATE clan_data SET mb{i} = Null WHERE mb{i} = {buid}")
                            c.execute(f"DELETE FROM clan_events WHERE user_id = {buid}")
                            c.execute(f"DELETE FROM clan_data WHERE leader_id = {buid}")
                        except:
                            pass
                        try:
                            c.execute("INSERT INTO black_list VALUES (?)",
                                      (buid,))
                            await message.answer(f"""<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={ui}'>{un}</a> –∑–∞–±–∞–Ω–µ–Ω!</b>

<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {prich}""")
                            await bot.send_message(buid, f"""<b>–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã!</b>
<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {prich}

–ï—Å–ª–∏ –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –ø–æ –æ—à–∏–±–∫–µ, –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: @end_soft""", parse_mode="HTML")
                        except:
                            pass
                except:
                    await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        except:
            await message.answer("/ban ID –ü—Ä–∏—á–∏–Ω–∞")
        db.commit()
        db.close()


@dp.message_handler(commands=['unban'])
async def process_ckb_command(message: types.Message):
    if message.from_user.id == 1326911178:
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        try:
            buid = int(message.text.split(' ')[1])
            ubed = True
            c.execute(f"SELECT * FROM black_list WHERE user_id = {buid}")
            items = c.fetchall()
            for el in items:
                ubed = False
            if ubed:
                await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω")
            else:
                c.execute(f"DELETE FROM black_list WHERE user_id = {buid}")
                await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω!")
                try:
                    await bot.send_message(buid, '–í–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª–∏!')
                except:
                    pass
        except:
            await message.answer("/ban ID –ü—Ä–∏—á–∏–Ω–∞")
        db.commit()
        db.close()


@dp.message_handler(commands=['banlist'])
async def process_ckb_command(message: types.Message):
    if True:
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        try:
            c.execute(f"SELECT * FROM black_list")
            items = c.fetchall()
            bu = []
            for el in items:
                for e in el:
                    bu.append(e)
            if len(bu) == 0:
                await message.answer("<b>–ë–∞–Ω–ª–∏—Å—Ç</b>\n\n–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç", parse_mode="HTML")
            else:
                msg = ''
                for i in bu:
                    msg += str(i) + '\n'
                await message.answer(f"<b>–ë–∞–Ω–ª–∏—Å—Ç</b>\n\n{msg}", parse_mode="HTML")
        except:
            pass
        db.commit()
        db.close()


@dp.message_handler(text=['id'])
async def process_ckb_command(message: types.Message):
    if True:
        try:
            try:
                await message.answer(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{message.reply_to_message.from_user.id}</code>", parse_mode="HTML")
            except:
                await message.answer(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{message.from_user.id}</code>", parse_mode="HTML")
        except:
            pass